//                 МАТЕМАТИЧНІ ОПЕРАТОРИ
//Нічим не відрізняються від шкільного курсу математики. Оператори повертають
//значення місце операції. Порядок обчислення математичних виразів тощо це
//всім звична алгебра.
//Важливо запам'ятати правильне найменування складових висловлювання. + - * /
//% називаються операторами, бо на чому вони застосовуються операндами.
const x = 10;
const y = 5;
console.log(x + y); // 15
console.log(x - y); // 5
console.log(x * y); // 50
console.log(x / y); // 2
console.log(x % y); // 0 - залишок від ділення
console.log(16 % 3); // 1
console.log(x ** y); // 100000 - x в степені y

//                ОПЕРАТОРИ ПОРІВНЯННЯ
//Використовуються для порівняння значень. Результатом свого виконання
//повертають були, true або false.
let a = 2;
let b = 3;
a > b;
a < b; // більше/менше
a >= b;
a <= b; // більше/менше чи дорівнює
a == b; // рівність
a != b; // нерівність
a === b; // сувора рівність
a !== b; // сувора нерівність
console.log("5 > 10", 5 > 10); // false
console.log("5 < 10", 5 < 10); // true
//Завжди використовуйте строгу рівність === і строгу нерівність !==.
//Оператори == і !=виконують перетворення типів порівнюваних значень, що
//може призвести до помилок, особливо у початківців.

//                 ЛОГІЧНІ ОПЕРАТОРИ
// // В JavaScript існує чотири логічні оператори: || (АБО), && (І), ! (НЕ), ?? (оператор null-об’єднання).
// // || (АБО)
// //Оператор “АБО” представлений двома символами вертикальної лінії:
// result = a || b;
// //Логічний оператор АБО призначений для маніпулювання лише булевими
// //значеннями. Якщо будь-який з його аргументів означає true, повертається true,
// //інакше повертається false.

// // && (І)
// // Оператор І представлений двома амперсандами &&:
// result = a && b;
// // Повертає true, якщо обидва оператори є правдивими, і false в іншому випадку

// //! (НЕ)
// //Булевий оператор НЕ представлений знаком оклику !.
// result = !value;
// //Оператор приймає один аргумент і виконує наступне:
// //Перетворює операнд на булевий тип: true/false.
// //Повертає зворотне значення.
// alert(!true); // false
// alert(!0); // true
// //Подвійний НЕ !! іноді використовується для перетворення значення на булевий
// //тип:
// alert(!!"не пустий рядок"); // true
// alert(!!null); // false
// //Тобто, перший НЕ перетворює значення на булеве і повертає зворотне, а другий
// //НЕ інвертує його знову.

console.log(2 && 3); // 3
console.log(0 && 5); // 0
console.log(-2 && -1); // -1
console.log(2 || 3); // 2
console.log(0 || 5); // 5
console.log(-2 || -1); // -2
console.log(!!2 && !!3); // true
console.log(!2 && !3); // false
console.log((2 && "word") || (null && false)); // word
console.log((false || 0) && 1); // 0
console.log(null ?? undefined ?? 0 ?? true); // 0
// Оператлор нульового злиття "??" працює як і оператор або "||", але відсіює не false,
// 0, "", а тільки null та undefined, до тих пір поки не зустріне інші значення
console.log(undefined ?? null ?? undefined ?? false ?? "" ?? 1); // false
console.log(null ?? undefined ?? null); // null
console.log(undefined ?? null ?? undefined ?? undefined); // undefined
